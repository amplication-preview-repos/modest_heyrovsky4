/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CameraSettings as PrismaCameraSettings } from "@prisma/client";

export class CameraSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CameraSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.cameraSettings.count(args);
  }

  async cameraSettingsItems<T extends Prisma.CameraSettingsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CameraSettingsFindManyArgs>
  ): Promise<PrismaCameraSettings[]> {
    return this.prisma.cameraSettings.findMany<Prisma.CameraSettingsFindManyArgs>(
      args
    );
  }
  async cameraSettings<T extends Prisma.CameraSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CameraSettingsFindUniqueArgs>
  ): Promise<PrismaCameraSettings | null> {
    return this.prisma.cameraSettings.findUnique(args);
  }
  async createCameraSettings<T extends Prisma.CameraSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CameraSettingsCreateArgs>
  ): Promise<PrismaCameraSettings> {
    return this.prisma.cameraSettings.create<T>(args);
  }
  async updateCameraSettings<T extends Prisma.CameraSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CameraSettingsUpdateArgs>
  ): Promise<PrismaCameraSettings> {
    return this.prisma.cameraSettings.update<T>(args);
  }
  async deleteCameraSettings<T extends Prisma.CameraSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CameraSettingsDeleteArgs>
  ): Promise<PrismaCameraSettings> {
    return this.prisma.cameraSettings.delete(args);
  }
}
